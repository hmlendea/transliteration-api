using NUnit.Framework;

using TransliterationAPI.Service.Entities;
using TransliterationAPI.Service.Transliterators;

namespace TransliterationAPI.UnitTests.Service.Transliterators
{
    public class GreekTransliteratorTests
    {
        private ITransliterator transliterator;

        [SetUp]
        public void SetUp()
        {
            this.transliterator = new GreekTransliterator();
        }

        [Test]
        [TestCase("Kαταoνία", "Kataonía")]
        [TestCase("Άβυδος Αιγύπτου", "Ábydos Aigýptou")]
        [TestCase("ᾈγίοι Ανάργυροι", "Agíoi Anárgyroi")]
        [TestCase("Ἀθῆναι", "Athênai")]
        [TestCase("Ᾰθῆναι", "Athênai")]
        [TestCase("Ἀίγινα", "Aígina")]
        [TestCase("Ἀίγυπτος", "Aígyptos")]
        [TestCase("Ᾰκρόπολις", "Akrópolis")]
        [TestCase("Ἀλεξάνδρεια", "Alexándreia")]
        [TestCase("Αλμυρός Μαγνησίας", "Almyrós Magnēsías")]
        [TestCase("Ἁμανός", "Amanós")]
        [TestCase("Ἄνδρος", "Ándros")]
        [TestCase("Ἀντιόχεια τῆς Μυγδονίας", "Antiókheia tês Mygdonías")]
        [TestCase("Αντίταυρος", "Antítauros")]
        [TestCase("Ᾰπολλωνία", "Apollōnía")]
        [TestCase("Ἀραβισσός", "Arabissós")]
        [TestCase("Ἄργος", "Árgos")]
        [TestCase("Ἀρκαδία", "Arkadía")]
        [TestCase("Ἄρτα", "Árta")]
        [TestCase("Ασκαλων", "Askalōn")]
        [TestCase("Ἄστυπαλαια", "Ástypalaia")]
        [TestCase("Αττική", "Attikḗ")]
        [TestCase("Ἀχαία", "Akhaía")]
        [TestCase("Βαβυλών", "Babylṓn")]
        [TestCase("Βυζάντιον", "Byzántion")]
        [TestCase("Δαμασκός", "Damaskós")]
        [TestCase("Δελφοί", "Delphoí")]
        [TestCase("Δωδώνη", "Dōdṓnē")]
        [TestCase("Ελευσίσ", "Eleusís")]
        [TestCase("Ἐλευσίς", "Eleusís")]
        [TestCase("Ἐπίδαυρος", "Epídauros")]
        [TestCase("Ἐρέτρια", "Erétria")]
        [TestCase("Ἐτεόκρητη", "Eteókrētē")]
        [TestCase("Εὐφράτης", "Euphrátēs")]
        [TestCase("Ήλιούπολις", "Hēlioúpolis")]
        [TestCase("Ήπειρος", "Ḗpeiros")]
        [TestCase("Ἡράκλεια Σιντική", "Hērákleia Sintikḗ")]
        [TestCase("Ἡράκλεια", "Hērákleia")]
        [TestCase("Ἡράκλειον", "Hērákleion")]
        [TestCase("Ἡφαιστία", "Hēphaistía")]
        [TestCase("Θεσσαλονίκη", "Thessaloníkē")]
        [TestCase("Θῆβαι", "Thēbai")]
        [TestCase("Θώθ", "Thṓth")]
        [TestCase("Ἱεράπολις", "Hierápolis")]
        [TestCase("Ἰουερνία", "Iouernía")]
        [TestCase("Ἰουερνίς", "Iouernís")]
        [TestCase("Ἰταβύριον", "Itabýrion")]
        [TestCase("Καππαδοκία", "Kappadokía")]
        [TestCase("Κασθαναία", "Kasthanaía")]
        [TestCase("Κασσώπη", "Kassṓpē")]
        [TestCase("Κασταναία", "Kastanaía")]
        [TestCase("Κερύνεια", "Kerýneia")]
        [TestCase("Κεφαλληνία", "Kephallēnía")]
        [TestCase("Κλύσμα", "Klýsma")]
        [TestCase("Κνωσός", "Knōsós")]
        [TestCase("Κόρινθος", "Kórinthos")]
        [TestCase("Κορόπη", "Korópē")]
        [TestCase("Κορυτσά", "Korytsá")]
        [TestCase("Κορωνέα", "Korōnéa")]
        [TestCase("Κορώνη", "Korṓnē")]
        [TestCase("Κουλουκιά", "Kouloukiá")]
        [TestCase("Κρήτη", "Krḗtē")]
        [TestCase("Κρούσεβατς", "Kroúsevats")]
        [TestCase("Κύθηρα", "Kýthēra")]
        [TestCase("Κυλλήνη", "Kyllḗnē")]
        [TestCase("Κύπρος", "Kýpros")]
        [TestCase("Κυρήνη", "Kyrḗnē")]
        [TestCase("Κωνσταντινούπολις", "Kōnstantinoúpolis")]
        [TestCase("Λέσβος", "Lésbos")]
        [TestCase("Λυκανδός", "Lykandós")]
        [TestCase("Μακεδονία", "Makedonía")]
        [TestCase("Μαντίνεια", "Mantíneia")]
        [TestCase("Μελιτηνή", "Melitēnḗ")]
        [TestCase("Μελιτόπολις", "Melitópolis")]
        [TestCase("Μέμφις", "Mémphis")]
        [TestCase("Μεσσήνη", "Messḗnē")]
        [TestCase("Μίλητος", "Mílētos")]
        [TestCase("Μυγδονία", "Mygdonía")]
        [TestCase("Νάξος", "Náxos")]
        [TestCase("Νέα Κόρινθος", "Néa Kórinthos")]
        [TestCase("Νεάπολις", "Neápolis")]
        [TestCase("Νοβιόδοῦνος", "Nobiódoûnos")]
        [TestCase("Ολυμπία", "Olympía")]
        [TestCase("Ὄλυνθος", "Ólynthos")]
        [TestCase("Οὐινδόβονα", "Ouindóbona")]
        [TestCase("Παλαιστίνη", "Palaistínē")]
        [TestCase("Παλλήνη", "Pallḗnē")]
        [TestCase("Πανόπολις", "Panópolis")]
        [TestCase("Πανὸς πόλις", "Panòs pólis")]
        [TestCase("Παραλία", "Paralía")]
        [TestCase("Πελοπόννησος", "Pelopónnēsos")]
        [TestCase("Ῥόδος", "Rhódos")]
        [TestCase("Ῥώμη", "Rhṓmē")]
        [TestCase("Σάρος", "Sáros")]
        [TestCase("Σπάρτη", "Spártē")]
        [TestCase("Συήνη", "Syḗnē")]
        [TestCase("Ὑδάσπης", "Hydáspēs")]
        [TestCase("Φιλαδέλφεια", "Philadélpheia")]
        [TestCase("Χαλάστρα", "Khalástra")]
        [TestCase("Χαλέστρη", "Khaléstrē")]
        [TestCase("Χαλκιδική", "Khalkidikḗ")]
        [TestCase("Χέμμις", "Khémmis")]
        public void GivenATextInAncientGreekScript_WhenTransliteratingIntoLatin_ThenTheCorrectTextIsReturned(
            string ancientGreekText,
            string expectedTransliteratedText)
            => Assert.That(transliterator.Transliterate(ancientGreekText, Language.AncientGreek), Is.EqualTo(expectedTransliteratedText));

        [Test]
        [TestCase("Ᾰθῆναι", "Athênai")]
        [TestCase("Αττική", "Attiká")]
        [TestCase("Δᾶλος", "Dâlos")]
        [TestCase("Ἐτεόκρητη", "Eteókrēta")]
        [TestCase("Ήπειρος", "Ápeiros")]
        [TestCase("Ἡράκλεια Σιντική", "Hērákleia Sintiká")]
        [TestCase("Ἡφαιστία", "Haphaistía")]
        [TestCase("Κασσώπη", "Kassṓpa")]
        [TestCase("Κερύνεια", "Karýneia")]
        [TestCase("Κεφαλληνία", "Kephallanía")]
        [TestCase("Κορόπη", "Korópa")]
        [TestCase("Κορώνη", "Korṓna")]
        [TestCase("Κρήτη", "Krḗta")]
        [TestCase("Κυλλήνη", "Kyllána")]
        [TestCase("Μαντίνεια", "Mantinéa")]
        [TestCase("Παλλήνη", "Pallána")]
        [TestCase("Χαλκιδική", "Khalkidiká")]
        public void GivenATextInAncientGreekDoricScript_WhenTransliteratingIntoLatin_ThenTheCorrectTextIsReturned(
            string ancientGreekDoricText,
            string expectedTransliteratedText)
            => Assert.That(transliterator.Transliterate(ancientGreekDoricText, Language.AncientGreekDoric), Is.EqualTo(expectedTransliteratedText));

        [Test]
        [TestCase("Αγία Παρασκευή", "Agía Paraskevī́")]
        [TestCase("Άγιος Δημήτριος", "Ágios Dīmī́trios")]
        [TestCase("Αθήνα", "Athī́na")]
        [TestCase("Αιγάλεω", "Aigáleō")]
        [TestCase("Αχαρνές", "Acharnés")]
        [TestCase("Βόλος", "Vólos")]
        [TestCase("Βύρωνας", "Výrōnas")]
        [TestCase("Γλυφάδα", "Glyfáda")]
        [TestCase("Εύοσμος", "Ev́osmos")]
        [TestCase("Ζωγράφου", "Zōgráfou")]
        [TestCase("Ηλιούπολη", "Īlioúpolī")]
        [TestCase("Ηράκλειο", "Īrákleio")]
        [TestCase("Θεσσαλονίκη", "Thessaloníkī")]
        [TestCase("Ίλιον", "Ílion")]
        [TestCase("Ιωάννινα", "Iōánnina")]
        [TestCase("Καλαμαριά", "Kalamariá")]
        [TestCase("Καλλιθέα", "Kallithéa")]
        [TestCase("Κορυδαλλός", "Korydallós")]
        [TestCase("Λάρισα", "Lárisa")]
        [TestCase("Μαρούσι", "Maroúsi")]
        [TestCase("Μενίδι", "Menídi")]
        [TestCase("Νέα Ιωνία", "Néa Iōnía")]
        [TestCase("Νέα Σμύρνη", "Néa Smýrnī")]
        [TestCase("Νίκαια", "Níkaia")]
        [TestCase("Νοβιόδοῦνος", "Noviódounos")]
        [TestCase("Παλαιό Φάληρο", "Palaió Fálīro")]
        [TestCase("Πάτρα", "Pátra")]
        [TestCase("Πειραιάς", "Peiraiás")]
        [TestCase("Περιστέρι", "Peristéri")]
        [TestCase("Τρίκαλα", "Tríkala")]
        [TestCase("Χαλάνδρι", "Chalándri")]
        public void GivenATextInModernScript_WhenTransliteratingIntoLatin_ThenTheCorrectTextIsReturned(
            string modernGreekText,
            string expectedTransliteratedText)
            => Assert.That(transliterator.Transliterate(modernGreekText, Language.Greek), Is.EqualTo(expectedTransliteratedText));
    }
}
